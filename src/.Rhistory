library(MASS)
library(MapGAM)
library(pROC)
library(corrplot)
library(mgcv)
library(gam)
library(caret)
library(jtools)
library(PrevMap)
library(sf)
library(tidyverse)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/esda_utils.R')
env.sf <- read_sf("../processed_data/neighborhood_vd.gpkg")
grid.sf <- read_sf(con, query="SELECT * FROM vd_reli_centroid")
data.sf <- data.sf %>% mutate(coordx=jitter(coordx), coordy=jitter(coordy))
data <- data.sf %>% st_drop_geometry()
data <- data %>%
mutate(sex = if_else(sex==0, "W", "M"), education = case_when(education==1 ~ "High", education==2 ~ "Medium", education==3 ~ "Low")) %>%
mutate(moved = if_else((has_moved_dist <= 300) | (is.na(has_moved_dist)), 0, 1))
data <- left_join(data, env.sf %>% st_drop_geometry(), by="reli")
paste("Number of participants removed because no covariate data for corresponding RELI: ", data %>% filter(is.na(D_SPORT)) %>% nrow())
data <- data %>% filter(!is.na(D_SPORT))
cov.indiv <- c("age", "sex", "swiss", "cohabiting", "education", "working", "difficulties", "smoking", "drinking", "inactivity", "moved")
# cov.env <- c("ptot", "d_sport", "d_swim", "n_acc_ped", "pm25", "noise")
cov.env <- c("PTOT", "D_SPORT", "N_ACC_PED", "GREEN_SP", "ENV_INDEX", "SOC_ECO_INDEX", "SWISS", "UNEMPLOYMENT", "LOW_EDUC", "HIGH_EDUC", "INCOME", "POVERTY", "HH_1PERS", "F_45_54", "F_55_64", "F_65_74", "F_75_MORE", "M_45_54", "M_55_64", "M_65_74", "M_75_MORE")
diab.data <- data %>%
mutate_at(cov.indiv[! cov.indiv == "age"], as.factor) %>%
mutate(POVERTY = factor(POVERTY)) %>%
mutate(diabetes = factor(diabetes, levels = c("0", "1"))) %>%
dplyr::select(pt, diabetes, all_of(cov.indiv), coordx, coordy, all_of(cov.env), reli)
diab.dt <- create_train_dataset(diab.data, frac=0.8, seed=NULL)
diab.train <- diab.dt$train
diab.test <- diab.dt$test
diab.data.long <- diab.data %>% dplyr::select(c(diabetes, age, cov.env[! cov.env == "POVERTY"])) %>% gather(key = "Variable", value = "Value", -diabetes)
ggplot(diab.data.long, aes(x = Value, y = diabetes)) +
geom_violin() +
labs(x="", y="Diabetes") +
facet_wrap(~ Variable, scales = "free_x")
m.univ <- glm(diabetes ~ sex, data=diab.data, family='binomial')
print_model_summary(m.univ)
paste("The probability that a man has diabetes is", inverse_logit(m.univ$coefficients[[1]]))
paste("The probability that a woman has diabetes is", inverse_logit(m.univ$coefficients[[1]] + m.univ$coefficients[[2]]))
paste("Women are", round(1/exp(m.univ$coefficients[[2]]),2), "less likely to have diabetes than a man.")
mcfadden(m.univ)
draw_predicted_prob(m.univ, diab.data, "diabetes")
diab.indiv.dat <- diab.data %>% dplyr::select(diabetes, all_of(cov.indiv))
glm.indiv <- glm(diabetes ~ ., data=diab.indiv.dat, family=binomial()) %>%
stepAIC(direction = "backward")
print_model_summary(glm.indiv)
gam.indiv <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex + swiss + education + working + difficulties + drinking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv)
gam.indiv <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex + swiss + education + working + difficulties + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv)
compare_models(glm.indiv, gam.indiv)
plot(gam.indiv, cex.lab=0.8, cex.axis=0.8)
gam.indiv.final <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex  + education + difficulties  + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv.final)
compare_models(gam.indiv, gam.indiv.final)
gam.indiv.final <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex  + swiss + education + difficulties  + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv.final)
compare_models(gam.indiv, gam.indiv.final)
gam.indiv.final <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex  + education + difficulties  + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv.final)
compare_models(gam.indiv, gam.indiv.final)
glm.env <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
diab.data %>%  filter_all(any_vars(is.na(.)))
a <- diab.data %>%  filter_all(any_vars(is.na(.)))
View(a)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/mnt/data/GEOSAN/RESEARCH PROJECTS/GEOCHRONIC @ LASIG (EPFL)/GEOSAN-geochronic/src")
library(stats)
library(tmap)
library(leaflet)
library(lme4)
require(RPostgreSQL)
library(MASS)
library(MapGAM)
library(pROC)
library(corrplot)
library(mgcv)
library(gam)
library(caret)
library(jtools)
library(PrevMap)
library(sf)
library(tidyverse)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/esda_utils.R')
con <- dbConnect(drv=RPostgreSQL::PostgreSQL(),host = "localhost",user= "aladoy",rstudioapi::askForPassword(),dbname="geosan")
data.sf <- read_sf(con, query="SELECT *, ST_X(geometry) as coordx, ST_Y(geometry) as coordy FROM geochronic.f2_study_dataset")
boundary.laus <- read_sf(con, query="SELECT * FROM lausanne_sectors_extent")
boundary.vd <- read_sf(con, query="SELECT * FROM vd_canton")
env.sf <- read_sf("../processed_data/neighborhood_vd.gpkg")
grid.sf <- read_sf(con, query="SELECT * FROM vd_reli_centroid")
data.sf <- data.sf %>% mutate(coordx=jitter(coordx), coordy=jitter(coordy))
data <- data.sf %>% st_drop_geometry()
data <- data %>%
mutate(sex = if_else(sex==0, "W", "M"), education = case_when(education==1 ~ "High", education==2 ~ "Medium", education==3 ~ "Low")) %>%
mutate(moved = if_else((has_moved_dist <= 300) | (is.na(has_moved_dist)), 0, 1))
data <- left_join(data, env.sf %>% st_drop_geometry() %>% filter(complete.cases(.)), by="reli")
paste("Number of participants removed because no covariate data for corresponding RELI: ", data %>% filter(is.na(D_SPORT)) %>% nrow())
data <- data %>% filter(!is.na(D_SPORT))
cov.indiv <- c("age", "sex", "swiss", "cohabiting", "education", "working", "difficulties", "smoking", "drinking", "inactivity", "moved")
# cov.env <- c("ptot", "d_sport", "d_swim", "n_acc_ped", "pm25", "noise")
cov.env <- c("PTOT", "D_SPORT", "N_ACC_PED", "GREEN_SP", "ENV_INDEX", "SOC_ECO_INDEX", "SWISS", "UNEMPLOYMENT", "LOW_EDUC", "HIGH_EDUC", "INCOME", "POVERTY", "HH_1PERS", "F_45_54", "F_55_64", "F_65_74", "F_75_MORE", "M_45_54", "M_55_64", "M_65_74", "M_75_MORE")
diab.data <- data %>%
mutate_at(cov.indiv[! cov.indiv == "age"], as.factor) %>%
mutate(POVERTY = factor(POVERTY)) %>%
mutate(diabetes = factor(diabetes, levels = c("0", "1"))) %>%
dplyr::select(pt, diabetes, all_of(cov.indiv), coordx, coordy, all_of(cov.env), reli)
diab.dt <- create_train_dataset(diab.data, frac=0.8, seed=NULL)
diab.train <- diab.dt$train
diab.test <- diab.dt$test
diab.data.long <- diab.data %>% dplyr::select(c(diabetes, age, cov.env[! cov.env == "POVERTY"])) %>% gather(key = "Variable", value = "Value", -diabetes)
ggplot(diab.data.long, aes(x = Value, y = diabetes)) +
geom_violin() +
labs(x="", y="Diabetes") +
facet_wrap(~ Variable, scales = "free_x")
m.univ <- glm(diabetes ~ sex, data=diab.data, family='binomial')
print_model_summary(m.univ)
paste("The probability that a man has diabetes is", inverse_logit(m.univ$coefficients[[1]]))
paste("The probability that a woman has diabetes is", inverse_logit(m.univ$coefficients[[1]] + m.univ$coefficients[[2]]))
paste("Women are", round(1/exp(m.univ$coefficients[[2]]),2), "less likely to have diabetes than a man.")
mcfadden(m.univ)
draw_predicted_prob(m.univ, diab.data, "diabetes")
diab.indiv.dat <- diab.data %>% dplyr::select(diabetes, all_of(cov.indiv))
glm.indiv <- glm(diabetes ~ ., data=diab.indiv.dat, family=binomial()) %>%
stepAIC(direction = "backward")
print_model_summary(glm.indiv)
gam.indiv <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex + swiss + education + working + difficulties + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv)
compare_models(glm.indiv, gam.indiv)
compare_models(glm.indiv, gam.indiv)
plot(gam.indiv, cex.lab=0.8, cex.axis=0.8)
gam.indiv.final <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex  + education + difficulties  + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv.final)
compare_models(gam.indiv, gam.indiv.final)
glm.env <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
print_model_summary(glm.env)
glm.env <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward")
print_model_summary(glm.env)
glm.env <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
print_model_summary(glm.env)
multilevel.empty <- glmer(diabetes ~ (1 | reli), data=diab.data, family=binomial("logit"))
summary(multilevel.empty)
icc <- multilevel.empty@theta[1]^2/ (multilevel.empty@theta[1]^2 + (3.14159^2/3))
icc
glm.env.all <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
print_model_summary(glm.env.all)
glm.env.nodemo <- update(glm.env.all, ~ . - F_45_54 + F_55_64 + F_65_74 + F_75_MORE + M_45_54 + M_55_64 + M_65_74 + M_75_MORE )
print_model_summary(glm.env.nodemo)
glm.env.nodemo <- update(glm.env.all, ~ . - F_45_54 - F_55_64 - F_65_74 - F_75_MORE - M_45_54 - M_55_64 - M_65_74 - M_75_MORE )
print_model_summary(glm.env.nodemo)
compare_models(glm.env.all, glm.env.nodemo)
glm.env.nodemo <- update(glm.env.all, ~ . - F_45_54 - F_55_64 - F_65_74 - F_75_MORE - M_45_54 - M_55_64 - M_65_74 - M_75_MORE - HIGH_EDUC )
print_model_summary(glm.env.nodemo)
glm.env.nodemo <- update(glm.env.all, ~ . - F_45_54 - F_55_64 - F_65_74 - F_75_MORE - M_45_54 - M_55_64 - M_65_74 - M_75_MORE )
print_model_summary(glm.env.nodemo)
glm.env.all <- glm(diabetes ~ . - HIGH_EDUC, data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
print_model_summary(glm.env.all)
glm.env.all <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
print_model_summary(glm.env.all)
gc()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/mnt/data/GEOSAN/RESEARCH PROJECTS/GEOCHRONIC @ LASIG (EPFL)/GEOSAN-geochronic/src")
library(stats)
library(tmap)
library(leaflet)
library(lme4)
require(RPostgreSQL)
library(MASS)
library(MapGAM)
library(pROC)
library(corrplot)
library(mgcv)
library(gam)
library(caret)
library(jtools)
library(PrevMap)
library(sf)
library(tidyverse)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/esda_utils.R')
con <- dbConnect(drv=RPostgreSQL::PostgreSQL(),host = "localhost",user= "aladoy",rstudioapi::askForPassword(),dbname="geosan")
data.sf <- read_sf(con, query="SELECT *, ST_X(geometry) as coordx, ST_Y(geometry) as coordy FROM geochronic.f2_study_dataset")
boundary.laus <- read_sf(con, query="SELECT * FROM lausanne_sectors_extent")
boundary.vd <- read_sf(con, query="SELECT * FROM vd_canton")
env.sf <- read_sf("../processed_data/neighborhood_vd.gpkg")
grid.sf <- read_sf(con, query="SELECT * FROM vd_reli_centroid")
data.sf <- data.sf %>% mutate(coordx=jitter(coordx), coordy=jitter(coordy))
data <- data.sf %>% st_drop_geometry()
data <- data %>%
mutate(sex = if_else(sex==0, "W", "M"), education = case_when(education==1 ~ "High", education==2 ~ "Medium", education==3 ~ "Low")) %>%
mutate(moved = if_else((has_moved_dist <= 300) | (is.na(has_moved_dist)), 0, 1))
data <- left_join(data, env.sf %>% st_drop_geometry() %>% filter(complete.cases(.)), by="reli")
paste("Number of participants removed because no covariate data for corresponding RELI: ", data %>% filter(is.na(D_SPORT)) %>% nrow())
data <- data %>% filter(!is.na(D_SPORT))
cov.indiv <- c("age", "sex", "swiss", "cohabiting", "education", "working", "difficulties", "smoking", "drinking", "inactivity", "moved")
# cov.env <- c("ptot", "d_sport", "d_swim", "n_acc_ped", "pm25", "noise")
cov.env <- c("PTOT", "D_SPORT", "N_ACC_PED", "GREEN_SP", "ENV_INDEX", "SOC_ECO_INDEX", "SWISS", "UNEMPLOYMENT", "LOW_EDUC", "INCOME", "HH_1PERS", "F_45_54", "F_55_64", "F_65_74", "F_75_MORE", "M_45_54", "M_55_64", "M_65_74", "M_75_MORE")
diab.data <- data %>%
mutate_at(cov.indiv[! cov.indiv == "age"], as.factor) %>%
mutate(POVERTY = factor(POVERTY)) %>%
mutate(diabetes = factor(diabetes, levels = c("0", "1"))) %>%
dplyr::select(pt, diabetes, all_of(cov.indiv), coordx, coordy, all_of(cov.env), reli)
diab.dt <- create_train_dataset(diab.data, frac=0.8, seed=NULL)
diab.train <- diab.dt$train
diab.test <- diab.dt$test
diab.data.long <- diab.data %>% dplyr::select(c(diabetes, age, cov.env[! cov.env == "POVERTY"])) %>% gather(key = "Variable", value = "Value", -diabetes)
ggplot(diab.data.long, aes(x = Value, y = diabetes)) +
geom_violin() +
labs(x="", y="Diabetes") +
facet_wrap(~ Variable, scales = "free_x")
m.univ <- glm(diabetes ~ sex, data=diab.data, family='binomial')
print_model_summary(m.univ)
paste("The probability that a man has diabetes is", inverse_logit(m.univ$coefficients[[1]]))
paste("The probability that a woman has diabetes is", inverse_logit(m.univ$coefficients[[1]] + m.univ$coefficients[[2]]))
paste("Women are", round(1/exp(m.univ$coefficients[[2]]),2), "less likely to have diabetes than a man.")
mcfadden(m.univ)
draw_predicted_prob(m.univ, diab.data, "diabetes")
diab.indiv.dat <- diab.data %>% dplyr::select(diabetes, all_of(cov.indiv))
glm.indiv <- glm(diabetes ~ ., data=diab.indiv.dat, family=binomial()) %>%
stepAIC(direction = "backward")
print_model_summary(glm.indiv)
gam.indiv <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex + swiss + education + working + difficulties + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv)
compare_models(glm.indiv, gam.indiv)
plot(gam.indiv, cex.lab=0.8, cex.axis=0.8)
gam.indiv.final <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex  + education + difficulties  + smoking + inactivity, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.indiv.final)
compare_models(gam.indiv, gam.indiv.final)
glm.env.all <- glm(diabetes ~ ., data=diab.data %>% dplyr::select(diabetes, all_of(cov.env)), family=binomial()) %>%
stepAIC(direction = "backward", trace=0)
print_model_summary(glm.env.all)
glm.env.nodemo <- update(glm.env.all, ~ . - F_45_54 - F_55_64 - F_65_74 - F_75_MORE - M_45_54 - M_55_64 - M_65_74 - M_75_MORE )
print_model_summary(glm.env.nodemo)
glm.env.final <- glm(diabetes ~ GREEN_SP + SOC_ECO_INDEX + HIGH_EDUC + INCOME )
glm.env.final <- glm(diabetes ~  SOC_ECO_INDEX + LOW_EDUC + INCOME , data=diab.data)
glm.env.final <- glm(diabetes ~  SOC_ECO_INDEX + LOW_EDUC + INCOME , data=diab.data, family=binomial())
print_model_summary(glm.env.final)
compare_models(glm.env.nodemo, glm.env.final)
gam.spat.complete <- mgcv::gam(diabetes ~ s(age, bs="cr") + sex  + education + difficulties + inactivity + SOC_ECO_INDEX + LOW_EDUC + INCOME, method = "GCV.Cp", data=diab.data, family="binomial")
summary(gam.spat.complete)
exp(coef(gam.spat.complete))
gam.spat.complete <- update(gam.indiv, ~ . + SOC_ECO_INDEX + LOW_EDUC + INCOME)
summary(gam.spat.complete)
exp(coef(gam.spat.complete))
gam.spat.final <- update(gam.spat.complete, ~ . - INCOME - LOW_EDUC)
summary(gam.spat.final)
exp(coef(gam.spat.final))
compare_models(gam.indiv.final, gam.spat.final)
gam.loess <- update(gam.spat.final, ~ . + lo(coordx, coordy, span=0.3))
summary(gam.loess)
compare_models(gam.spat.final, gam.loess)
a <- data.frame(pred_prob = inverse_logit(predict.gam(gam.spat.final, diab.data, type='response')), observed=diab.data$diabetes)
predgrid <- predgrid(diab.data[, c("coordx","coordy")], map=as(boundary.laus, "Spatial"))
m1 <- modgam(diabetes~ age + sex + education + difficulties + inactivity + SOC_ECO_INDEX + lo(coordx, coordy), data=diab.data, rgrid=predgrid, sp=0.3, type="spatial", family = "binomial", reference="none", permute=0)
summary(m1)
plot(m1, exp=TRUE, data, contours = "response")
predgrid <- predgrid(diab.data[, c("coordx","coordy")], map=as(boundary.vd, "Spatial"))
m1 <- modgam(diabetes~ age + sex + education + difficulties + inactivity + SOC_ECO_INDEX + lo(coordx, coordy), data=diab.data, rgrid=predgrid, sp=0.3, type="spatial", family = "binomial", reference="none", permute=0)
summary(m1)
plot(m1, exp=TRUE, data, contours = "response")
draw_predicted_prob(gam.spat.final, diab.data, "diabetes")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/mnt/data/GEOSAN/RESEARCH PROJECTS/GEOCHRONIC @ LASIG (EPFL)/GEOSAN-geochronic/src")
library(stats)
library(tmap)
library(leaflet)
require(RPostgreSQL)
library(corrplot)
library(spdep)
library(rgeoda)
library(sf)
library(tidyverse)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/esda_utils.R')
con <- dbConnect(drv=RPostgreSQL::PostgreSQL(),host = "localhost",user= "aladoy","deep-rene",dbname="geosan")
boundary.laus <- read_sf(con, query="SELECT * FROM lausanne_sectors_extent")
sectors.laus <- read_sf(con, query="SELECT * FROM lausanne_sectors")
boundary.vd <- read_sf(con, query="SELECT * FROM vd_canton")
env.sf <- read_sf(con, query="SELECT reli, ptot, d_sport, d_forest, d_lake, d_swim, n_acc_ped, n_acc_bic, green_sp, blue_sp, pm25, no2, noise, env_index, soc_eco_index, healthcare_index, geometry FROM ha_indicators")
sql_socdemo = "SELECT reli, ptot_x as ptot, (p4549f + p5054f) as p4554f, (p5559f + p6064f) as p5564f, (p6569f + p7074f) as p6574f, (p7579f + p8084f + p8589f + p90mf) as p75mf, (p4549m + p5054m) as p4554m,
(p5559m + p6064m) as p5564m, (p6569m + p7074m) as p6574m, (p7579m + p8084m + p8589m + p90mm) as p75mm,hhp1p as hhp1p,hhpriv as hhpriv, (pnschb + pnschn) as pswiss,adune as punemployed,(pfnone + pfobl + pfgen + pfprof) as ploweduc, (pfmat + pfprsf + pfprss) as pmededuc, (pfbac + pfmas + pfphd) as phigheduc, iqmd as medincome FROM microgis_ha"
socdemo <- read_sf(con, query=sql_socdemo)
socdemo <- socdemo %>% mutate(
F_45_54 = perc(p4554f, ptot),
F_55_64 = perc(p5564f, ptot),
F_65_74 = perc(p6574f, ptot),
F_75_MORE = perc(p75mf, ptot),
M_45_54 = perc(p4554m, ptot),
M_55_64 = perc(p5564m, ptot),
M_65_74 = perc(p6574m, ptot),
M_75_MORE = perc(p75mm, ptot),
SWISS = perc(pswiss, ptot),
UNEMPLOYMENT = perc(punemployed, ptot),
LOW_EDUC = perc(ploweduc, ptot),
MEDIUM_EDUC = perc(pmededuc, ptot),
HIGH_EDUC = perc(phigheduc, ptot),
INCOME = medincome,
POVERTY = factor(if_else(medincome < 40, 1 , 0)), #https://www.swissinfo.ch/eng/society/poverty-affects-nearly-one-in-five-swiss-households/47370330
HH_1PERS = perc(hhp1p, hhpriv)
) %>%
select(reli, F_45_54:HH_1PERS)
env.sf <- env.sf %>%
select(reli, ptot, d_sport, n_acc_ped, green_sp, pm25, no2, noise, env_index, soc_eco_index) %>%
rename_at(vars(-reli, -geometry), toupper)
neighborhood.vd.sf <- env.sf %>%
inner_join(socdemo, by="reli") %>%
filter(complete.cases(.))
neighborhood.vd.sf <- env.sf %>%
inner_join(socdemo, by="reli") %>%
st_drop_na()
neighborhood.vd.sf <- env.sf %>%
inner_join(socdemo, by="reli") %>%
na.omit()
st_write(neighborhood.vd.sf, "../processed_data/neighborhood_vd.gpkg", delete_dsn = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/mnt/data/GEOSAN/RESEARCH PROJECTS/GEOCHRONIC @ LASIG (EPFL)/GEOSAN-geochronic/src")
library(stats)
library(tmap)
library(leaflet)
library(lme4)
require(RPostgreSQL)
library(MASS)
library(MapGAM)
library(pROC)
library(corrplot)
library(mgcv)
library(gam)
library(caret)
library(jtools)
library(PrevMap)
library(sf)
library(tidyverse)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/esda_utils.R')
con <- dbConnect(drv=RPostgreSQL::PostgreSQL(),host = "localhost",user= "aladoy",rstudioapi::askForPassword(),dbname="geosan")
data.sf <- read_sf(con, query="SELECT *, ST_X(geometry) as coordx, ST_Y(geometry) as coordy FROM geochronic.f2_study_dataset")
boundary.laus <- read_sf(con, query="SELECT * FROM lausanne_sectors_extent")
boundary.vd <- read_sf(con, query="SELECT * FROM vd_canton")
env.sf <- read_sf("../processed_data/neighborhood_vd.gpkg")
grid.sf <- read_sf(con, query="SELECT * FROM vd_reli_centroid")
data.sf <- data.sf %>% mutate(coordx=jitter(coordx), coordy=jitter(coordy))
data <- data.sf %>% st_drop_geometry()
data <- data %>%
mutate(sex = if_else(sex==0, "W", "M"), education = case_when(education==1 ~ "High", education==2 ~ "Medium", education==3 ~ "Low")) %>%
mutate(moved = if_else((has_moved_dist <= 300) | (is.na(has_moved_dist)), 0, 1))
data <- left_join(data, env.sf %>% st_drop_geometry(), by="reli")
paste("Number of participants removed because no covariate data for corresponding RELI: ", data %>% filter(is.na(D_SPORT)) %>% nrow())
data <- data %>% filter(!is.na(D_SPORT))
cov.indiv <- c("age", "sex", "swiss", "cohabiting", "education", "working", "difficulties", "smoking", "drinking", "inactivity", "moved")
# cov.env <- c("ptot", "d_sport", "d_swim", "n_acc_ped", "pm25", "noise")
cov.env <- c("PTOT", "D_SPORT", "N_ACC_PED", "GREEN_SP", "ENV_INDEX", "SOC_ECO_INDEX", "SWISS", "UNEMPLOYMENT", "LOW_EDUC", "INCOME", "HH_1PERS", "F_45_54", "F_55_64", "F_65_74", "F_75_MORE", "M_45_54", "M_55_64", "M_65_74", "M_75_MORE")
?spatial_density
require(spatstat)
?spatial_density
?spdensity
??spdensity
??bw.scott
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/mnt/data/GEOSAN/RESEARCH PROJECTS/GEOCHRONIC @ LASIG (EPFL)/GEOSAN-geochronic/src")
library(raster)
library(tidyverse)
library(sf)
library(tmap)
library(spatstat)
library(smacpod)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_ouctomes.R')
library(raster)
library(tidyverse)
library(sf)
library(tmap)
library(spatstat)
library(smacpod)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_ouctomes.R')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "/mnt/data/GEOSAN/RESEARCH PROJECTS/GEOCHRONIC @ LASIG (EPFL)/GEOSAN-geochronic/src")
library(raster)
library(tidyverse)
library(sf)
library(tmap)
library(spatstat)
library(smacpod)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_ouctomes.R')
library(raster)
library(tidyverse)
library(sf)
library(tmap)
library(spatstat)
library(smacpod)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
con <- dbConnect(drv=RPostgreSQL::PostgreSQL(),host = "localhost",user= "aladoy",rstudioapi::askForPassword(),dbname="geosan")
indiv <- load_participants(con)
indiv <- load_participants(con)
laus <- load_boundaries(con)
indiv <- load_participants(con)
laus <- load_boundaries(con)
env <- load_env()
indiv <- load_participants(con)
laus <- load_boundaries(con)
env <- load_env()
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
indiv <- load_participants(con)
laus <- load_boundaries(con)
env <- load_env()
cov.indiv <- c("age", "sex", "swiss", "cohabiting", "education", "difficulties", "smoking", "drinking", "inactivity")
cov.env <- c("PTOT", "ENV_INDEX", "NO2", "PM25", "NOISE", "GREEN_SP", "D_SPORT", "N_ACC_PED", "SOC_ECO_INDEX", "UNEMPLOYMENT", "LOW_EDUC", "HH_1PERS", "INCOME")
diab.data <- select_outcome(indiv, "diabetes", cov=cov.indiv)
plot_case_control(diab.data, window=laus$extent, title='Diabetes')
diab.events <- create_ppp(diab.data, laus$extent, marks=diab.data$outcome, title="Diabetes - events")
diab.cases <- create_ppp(diab.data %>% filter(outcome=='case'), laus$extent, title="Diabetes - cases")
diab.controls <- create_ppp(diab.data %>% filter(outcome=='control'), laus$extent, title="Diabetes - controls")
compare_spatial_dens(diab.cases, diab.controls)
bw.scott(cases, isotropic=FALSE, d=NULL)
bw.scott(diab.cases, isotropic=FALSE, d=NULL)
bw.scott(diab.cases, isotropic=FALSE, d=NULL)$sigma.x
bw.scott(diab.cases, isotropic=FALSE, d=NULL)[1]
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_spatial_dens(diab.cases, diab.controls)
lrr <- log_ratio_spatial_dens(diab.events, sigma=350)
k_func_diff(diab.events)
polygonize_logrr(lrr, env)
diab.lrr <- log_ratio_spatial_dens(diab.events, sigma=350)
diab.incid <- polygonize_logrr(diab.lrr, env)
diab.incid$lrr.ha
diab.incid$lrr.ha %>% select(cov.env)
diab.incid$lrr.ha %>% select(risk, all_of(cov.env))
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_areas(diab.incid$lrr.ha, cov.env)
for (var in names(ha_signif)[!names(ha_signif) %in% c("risk", "reli", "POVERTY", "geometry")]) {
compare_risk_groups(ha_signif, var)
}
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_groups(diab.incid$lrr.ha)
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_groups(diab.incid$lrr.ha)
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_groups(diab.incid$lrr.ha)
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_groups(diab.incid$lrr.ha, cov.indiv, cov.env)
compare_risk_groups(diab.incid$lrr.ha, cov.indiv, cov.env)
diab.incid$lrr.ha
library(raster)
library(tidyverse)
library(sf)
library(tmap)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
library(tidyverse)
library(sf)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_groups(diab.incid$lrr.ha, cov.env)
library(tidyverse)
library(sf)
source('/mnt/data/GEOSAN/FUNCTIONS/GIRAPH-functions/geosan_funcs/password_utils.R')
source('descriptive/utils_spatial_clustering_outcomes.R')
compare_risk_groups(diab.incid$lrr.ha, cov.env)
